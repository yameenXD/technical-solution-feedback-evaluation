using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Runtime.InteropServices;

namespace Quiz_game_design_and_coded_solution
{
    public partial class Form1 : Form
    {
        public static string User; // this is declared as a public (global variable) i.e User
        public static string Forname; // this is declared as a public (global variable) i.e Forname
        public static string Surname;// this is declared as a public (global variable) i.e Surname
        public static string FORM;// this is declared as a public (global variable) i.e FORM
        public static string DOB; // this is declared as a public (global variable) i.e DOB
        public static int Score;
        public Form1()// constructor is to initialize the form components and assign a value to the User property.
        {
            InitializeComponent(); // automatically generated by Visual Studio when a Windows Form is created, and it initializes all of the form's components, such as buttons, labels, and text boxes.
            User = System.Environment.UserName;// property retrieves the name of the current user profile, and this value is assigned to the User property. This allows the application to access the user's name throughout the application.
        }

        private void Form1_Load(object sender, EventArgs e) // this is the private method for the form1 load i.e the menu 
        {
            lblUserName.Text = User; // property is set to the value of the User property, which was assigned the name of the current user profile in the form's constructor.
            lblUserName_Register.Text = User;

            DateTime LoginDateTime = DateTime.Now; // property retrieves the current date and time, and this value is stored in the LoginDateTime variable.

            DateTime TestDate = DateTime.Now; // This retrieve the current date



            string SQL = "INSERT INTO tblLogin (UserName, LoginDateTime) VALUES ('" + User + "','" + LoginDateTime + "');"; // This string contains an SQL INSERT statement that inserts values into a table called tblLogin. The values being inserted are the user's name (stored in the User property) and the current date and time (stored in the LoginDateTime variable). 
            DBCon.AmendAddInsertData(SQL); // method is used to execute the SQL statement, which inserts the data into the database. This method performs some sort of database connection and data manipulation operation to achieve the insertion of data into the database table.

            // Checks if User in Database already
            SQL = "SELECT * FROM tblUser WHERE UserName = '" + User + "';";
            DataSet UserDataset = DBCon.getDataSet(SQL);

            if (UserDataset.Tables[0].Rows.Count > 0)// If the user is registered
            {
                MessageBox.Show("User Registered."); // It will output that the user has been registered
                timer1.Enabled = true; // sets it equal to true
                timer1.Start(); // starts the timer

            }
            else// If the user is not registered it will ask the user to complete registration
            {
                MessageBox.Show("Please complete registration.");
                pnlNewUser.Visible = true;
            }

            // Don't run until user registered.
            timer1.Start(); // This will start the timer
        }





        private void button1_Click(object sender, EventArgs e) // The purpose of this event handler is to create an instance of a new form named "General_knowledge_question" and display it to the user.
        {
            var myform = new General_knowledge_question(); // Within the event handler, a new instance of the General_knowledge_question form is created using the var myform = new General_knowledge_question(); statement.
            myform.Show(); // the myform.Show() method is called to display the form to the user.
            timer1.Enabled = true;
            timer1.Start();
        }

        private void button2_Click(object sender, EventArgs e) // The purpose of this event handler is to create an instance of a new form named "Entertainment" and display it to the user.
        {
            var myform = new Entertainment(); // Within the event handler, a new instance of the Entertainment form is created using the var myform = new Entertainment(); statement. 
            myform.Show(); // Finally, the myform.Show() method is called to display the form to the user.
            timer1.Enabled = true; // timer1 is set to true
            timer1.Start(); // Timer will start
        }

        private void button3_Click(object sender, EventArgs e) // The purpose of this event handler is to create an instance of a new form named "History" and display it to the user.
        {
            var myform = new History(); //  Within the event handler, a new instance of the History form is created using the var myform = new History(); statement. 
            myform.Show(); // the myform.Show() method is called to display the form to the user.
            timer1.Enabled = true; // timer1 is set to true
            timer1.Start(); // Timer will start
        }

        private void exitBtn_Click(object sender, EventArgs e) // The purpose of this event handler is to close the current form.
        {
            this.Close(); // Within the event handler, the this.Close() statement is called to close the current form.
        }

        private void button4_Click(object sender, EventArgs e)// this private method for the button click for FoodandDrink for fourth button selection 
        {
            var myform = new Food_and_Drink(); // when the button labeled "button4" is clicked.
            myform.Show(); //The code creates a new instance of the "Food_and_Drink" form and then calls the "Show" method to display it to the user. 
            timer1.Enabled = true; // timer1 is set
            timer1.Start();
        }

        private void textbox_Forname_TextChanged(object sender, EventArgs e) // The purpose of the code is to update the value of a local variable Forname with the current text in the textbox named textbox_Forname. 
        {
            Forname = textbox_Forname.Text; // whenever the text in the textbox changes, the textbox_Forname_TextChanged event is executed
            textbox_Forname.Text = Forname; // this method will be executed to update the Forname variable and the text in the textbox. 
            this.Show(); // the end is used to display the form containing the textbox. 
        }

        private void textbox_Surname_TextChanged(object sender, EventArgs e) // The purpose of the code is to handle the text changed event of the "textbox_Surname" control in a Windows Form Application.
        {
            Surname = textbox_Surname.Text; // When the text in the textbox changes, the code updates the value of a local variable "Surname" with the new text.
            textbox_Surname.Text = Surname; //  it sets the text of the textbox to the updated value of "Surname". 
            this.Show();// it displays this on the form
        }

        private void textbox_Form_TextChanged(object sender, EventArgs e) // This code executes whenever the text in the "textbox_Form" changes.
        {
            // The purpose of the code is to get the user's input from the textbox named "textbox_Form", store it in a string variable named "FORM", and then display it back in the textbox.
            FORM = textbox_Form.Text;
            textbox_Form.Text = FORM;
            this.Show();
        }

        private void Textbox_DOB_TextChanged(object sender, EventArgs e) // updating the value of a private class-level string variable with the contents of a textbox control when the contents of the textbox change (e.g. the user types in something or pastes text into the textbox).
        {
            DOB = Textbox_DOB.Text; // The updated value is assigned to the DOB variable.
            Textbox_DOB.Text = DOB;
            this.Show();// This method call is redisplaying the form, which will cause the updated value of DOB to be displayed in the textbox, even if the value hasn't changed.
        }
        private void btnRegister_Click_1(object sender, EventArgs e) // when the user clocks on the register button, it displays a welcome message to the user.
        {
            MessageBox.Show("Welcome to the quiz game" + "," + textbox_Forname.Text + "," + "to continue please select another mode"); // this will output a welcome message to the user
            string User = label5.Text;
            User = System.Environment.UserName; // This will retrieve the users current username through a variable user.
            lblUserName_Register.Text = User;
            string Forename = textbox_Forname.Text; // Retrieves user forname
            string Surname = textbox_Surname.Text; // Retrieves user surname
            string FORM = textbox_Form.Text; // Retrieves user Form
            string DOB = Textbox_DOB.Text; // Retrieves user Date of birth
            string SQL_3 = "INSERT INTO tblUser (UserName, Forname, Surname, Form, DOB) VALUES ('" + User + "','" + Forename + "','" + Surname + "','" + FORM + "','" + DOB + "');"; // this basically inserts the user's information into a database table called tblUser
            DBCon.AmendAddInsertData_3(SQL_3); // It passes the SQL_3 as an argument to allow to execute the query and add the user's information to the database
            this.Show();
            timer1.Enabled = true;
            timer1.Start();
        }
    }
}

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;

namespace Quiz_game_design_and_coded_solution
{
    public partial class History : Form
    {
        //quiz variables
        int correctAnswer;
        int questionNumber = 0;
        int optionnumber = 5;
        int score;
        int percentage;
        int totalQuestions;
        DateTime startTime = DateTime.Now;
        int[] goArray;
        // This holds the path to the file which contains the questions for the quiz
        static string FilePath = @"P:\6th Form Computing\16MunirY\NEA 16-02-2023 UPDATED\9-02-2023---NEA-UPDATED-PROJECT-main\Changes 15-02-23\Quiz game design and coded solution\bin\Debug\h.txt";
        //This declares a list of strings called questions. This holds the questions for the quiz
        List<string> questions;
        static string subject = "History";


        public History()
        {
            InitializeComponent(); // a method generated by Visual Studio that initializes all the components of the form
            question_reading();// calls the question reading method
            askQuestion(0, 5); // Started at 1 should start at 0.
            totalQuestions = 10; // this is the total amount of questions
            timer1.Start(); // start timer
        }

        public void question_reading()
        {
            FilePath = System.Environment.CurrentDirectory + "\\h.txt"; // this is the current directory of the file
            int count = 0; // this declares the count variable as an integer
            string data; // this declares the data as a string 
            FileStream fileStream = new FileStream(FilePath, FileMode.Open, FileAccess.Read);
            StreamReader streamReader = new StreamReader(fileStream);

            questions = new List<string>();// instantiates the list

            while (count < 60)// while count is less than 60
            {
                data = streamReader.ReadLine(); // This will read each line of the file
                questions.Add(data);// This will add the line to the questions list
                count++;// This will increment the count variable
            }

        }
        //This a method which is called when the user clicks on the button to select an answer
        private void checkAnswerEvent(object sender, EventArgs e)
        {
            // It checks if the sender is a button
            if (sender is Button senderButton)
            {
                //This will get the button tag as an integer
                int buttonTag = Convert.ToInt32(senderButton.Tag);
                //This will check the button tag matches the correct answer
                if (buttonTag == correctAnswer) 
                {
                    //Increment the score if the answer is correct
                    score++;
                    //This will essentially update the score label
                    label2.Text = Convert.ToString(score);
                }
                // This will set the optionnumber equal to 6
                optionnumber = 6;
                //This will increment the question number
                questionNumber++;
                // This will display the next question
                askQuestion(questionNumber, optionnumber);
            }
        }

        public void askQuestion(int qnum, int optionnumber)
        {
            qnum = questionNumber; // sets qnum to become questionNumber

            //Set the image to be displayed
            pictureBox1.Image = Properties.Resources.images;
            try
            {
                //This will display the question and answer options to the user
                label1.Text = questions[(questionNumber) * (optionnumber)]; // the question asked to the user
                string[] options = new string[] { questions[(questionNumber) * (optionnumber) + 1], questions[(questionNumber) * (optionnumber) + 2], questions[(questionNumber) * (optionnumber) + 3], questions[(questionNumber) * (optionnumber) + 4] };
                button1.Text = options[0];
                button2.Text = options[1];
                button3.Text = options[2];
                button4.Text = options[3];
                //This will store the correct answer and question options
                correctAnswer = Convert.ToInt32(questions[(questionNumber) * (optionnumber) + 5]);
                // This will stop the timer and display the user's score
                if (questionNumber == 9)
                {

                    timer1.Stop();

                    percentage = (int)Math.Round((double)(score * 100)) / totalQuestions;

                    MessageBox.Show("Quiz Ended!" + Environment.NewLine + "You have answered " + score + " questions correctly" + Environment.NewLine +
                    "Your total percentage is " + percentage + "%" + Environment.NewLine +
                    "Click OK to play again");
                    score = 0;
                    questionNumber = 0;

                    DateTime time = DateTime.Now;
                    string user = lblUserName.Text;
                    string subject = "History";
                    // The SQL query for tblUserScores for the data to be inserted into tblUserScores table
                    string SQL_2 = "INSERT INTO tblUserScores (UserName, TestDate, Score, Subject) VALUES ('" + user + "','" + time + "'," + percentage + ",'" + subject + "');";
                    // inserts the data into the database
                    DBCon.AmendAddInsertData_2(SQL_2);

                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void exitBtn_Click(object sender, EventArgs e)
        {
            // This function is called when the user when they click on the exit button. This will allow the user to close the form
            this.Close();
        }
        private void timer1_Tick(object sender, EventArgs e)
        {
            DateTime nowDateTime = DateTime.Now; // this displays the currentdate and time
            var currentTime = Math.Abs(startTime.Second - nowDateTime.Second); // calculates the difference between the current time and the start time
            lbltimer.Text = currentTime.ToString(); // It will then be displayed as a string in a label called lbltimer as shown
            lbltimer.Text = DateTime.Now.ToString("HH:mm:ss"); // displays the hours, minute and seconds
        }

        // This is a loader for the form
        private void History_Load_1(object sender, EventArgs e)
        {
            lblUserName.Text = System.Environment.UserName; // This will set the username of the current user who currently running the application
        }
    }
}
